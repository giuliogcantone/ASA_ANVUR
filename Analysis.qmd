---
title: "Analysis"
author: "Cantone"
format:
editor:
---

```{r setup, include=FALSE}
pacman::p_load(
  tidyverse,
  openalexR,
  readxl,
  nplyr,
  arrow,
  robustrao,
  ggExtra
)
```

## Operantions Sampling Frame

Joining the journal concepts to the sampling frame

```{r}
sampling_frame <- db_papers_ita_f %>%
  filter(department %in% IN$department[1:64],
         D_13 == 1) %>%
  left_join(db_j %>% select(journal = display_name,
                            j_concepts = x_concepts)) %>%
  select(id, journal,author_contribution,year,concepts,j_concepts,department) %>%
  mutate(year = case_when(
    year < 2020 ~ "PRE",
    year > 2020 ~ "POST",
  )) %>%
  arrange(journal)

sampling_frame %>% unique() %>% length()
```

Rao-Stirling

```{r}
sampling_frame %>%
  select(-j_concepts) %>%
  unnest(c(concepts),
         names_sep = "_") %>%
    filter(concepts_score > 0,
           concepts_level== 1) %>%
  transmute(id,
            concept = concepts_display_name,
            p = concepts_score) %>%
  distinct(id,concept,
           .keep_all = T) %>%
  mutate(p = p/sum(p),
         .by = id) %>%
  arrange(concept) %>%
    mutate(n_c = n(),
           .by = id) -> sampling_frame_RS

```
RS part second

```{r}
sampling_frame_RS %>%
summarize(crossed = list(crossing(concept, concept)),
          .by = id) %>%
  unnest(crossed) %>%
  rename(
    i = concept...1,
    j = concept...2
  ) %>%
  left_join(
    sampling_frame_RS %>% transmute(
      id,
      i = concept,
      p_i = p,
      n_c
    )
  ) %>%
    left_join(
    sampling_frame_RS %>% transmute(
      id,
      j = concept,
      p_j = p,
      n_c
  )
  ) %>%
  mutate(d = map2_dbl(i,j,~1 - concepts_d_matrix[.y, .x])) %>%
  summarise(.by = id,
            RS = sum(p_i * p_j * d),
            True_RS = 1 / (1 - RS)) -> diversity_db
```


Alternative DIversity

```{r}
  summarise(RS =
              ifelse(first(n_c) > 1,
                     RaoStirling(p,
                                 concepts_d_matrix[
                                   (row.names(concepts_d_matrix) %in% (concept %>% unique())),
                                   (row.names(concepts_d_matrix) %in% (concept %>% unique()))
                                   ]
                                 ),
                     0),
            .by = id) %>%
  mutate(LC = 1/(1-RS)) -> diversity_db
```


Difformity

```{r}
sampling_frame %>%
  unnest(c(concepts),
         names_sep = "_") %>%
      filter(
        concepts_score > 0,
        concepts_level==1) %>%
  transmute(id,
            concept = concepts_display_name,
            p = concepts_score,
            level = "paper"
            ) %>%
  distinct(id,concept,
           .keep_all = T) %>%
  add_row(
    sampling_frame %>%
  unnest(c(j_concepts),
         names_sep = "_") %>%
      filter(
        j_concepts_score > 0,
        j_concepts_level==1) %>%
  transmute(id,
            concept = j_concepts_display_name,
            p = j_concepts_score,
                        level = "journal"
            ) %>%
  distinct(id,concept,
           .keep_all = T)
  ) %>%
   mutate(p = p/sum(p),
         .by = c(id,level)) %>%
  group_by(id) %>%
  complete(level, concept, fill = list(p = 0)) %>%
  ungroup -> oddity_db
  
oddity_db %>%
  filter(level == "paper") %>%
  select(-level) %>%
  full_join(oddity_db %>%
              filter(level == "journal") %>%
              rename(k = concept, p_k = p) %>%
              select(-level), by = "id") %>%
  transmute(id, x = concept, k, p_x = p, p_k) %>%
  mutate(x = ifelse(x %>% is.na(),k,x),
         k = ifelse(k %>% is.na(),x,k),
         p_x = ifelse(x %>% is.na(),0,p_x),
         p_k = ifelse(k %>% is.na(),0,p_k)
  ) %>%
  filter(x == k) -> oddity_db

oddity_db %>%
  mutate(diff = abs(p_k - p_x)) %>%
  mutate(.by = id,
         n_diff = diff/sum(diff)) -> oddity_db

oddity_db %>%
summarize(crossed = list(crossing(x, x)),
          .by = id) %>%
  unnest(crossed) %>%
  rename(
    i = x...1,
    j = x...2
  ) %>%
  left_join(
    oddity_db %>% transmute(
      id,
      i = x,
      n_diff_i = n_diff
    )
  ) %>%
    left_join(
    oddity_db %>% transmute(
      id,
      j = x,
      n_diff_j = n_diff,
  )
  ) %>%
  mutate(d = map2_dbl(i,j,~1 - concepts_d_matrix[.y, .x])) %>%
  summarise(.by = id,
            Difform = sum(n_diff_i * n_diff_j * d),
            True_Difform = 1 / (1 - Difform)) -> difformity_db
```

Jack-in

```{r}


sampling_frame %>%
  left_join(diversity_db) %>%
  left_join(difformity_db) %>%
  mutate(COVID19 = factor(year, levels = c("PRE","POST"))) %>%
  summarise(
    output = sum(author_contribution),
    Diversity = sum(True_RS*author_contribution, na.rm = T)/output,
    Difformity = sum(True_Difform*author_contribution, na.rm = T)/ output,
            .by = c(department,COVID19)
            ) %>%
  summarise(
    m.output = mean(output),
    m.Diversity = mean(Diversity),
    m.Difformity = mean(Difformity),
    sd.Div = sd(Diversity),
    sd.Diff = sd(Difformity),
    corrDD = cor(Diversity,Difformity),
    corrD1O = cor(output,Diversity),
    corrD2O = cor(output,Difformity),
    .by = COVID19
  )
```

Graph result

```{r}
ggMarginal(
sampling_frame %>%
  left_join(diversity_db) %>%
  left_join(difformity_db) %>%
  mutate(COVID19 = factor(year, levels = c("PRE","POST"))) %>%
  summarise(Diversity = sum(True_RS*author_contribution, na.rm = T)/
              sum(author_contribution),
            Difformity = sum(True_Difform*author_contribution, na.rm = T)/
              sum(author_contribution),
            .by = c(department,COVID19)
            ) %>%
  ggplot(aes(Diversity,
             Difformity)) +
  geom_point(aes(color = COVID19)) +
  geom_smooth(method = "lm",
              color = "red") +
  xlab("Avg. Diversity") +
  ylab("Avg. Difformity") +
  scale_color_viridis_d(option = "D",
                        begin = .9,
                        end = .3) +
  theme_test()+
  theme(legend.position = c(0.85, 0.25)),
groupColour = T
)

```

Results

```{r}
sampling_frame %>%
  left_join(diversity_db) %>%
  left_join(difformity_db) %>%
  mutate(COVID19 = factor(year, levels = c("PRE","POST"))) %>%
  summarise(
    output = sum(author_contribution),
    Diversity = sum(True_RS*author_contribution, na.rm = T)/output,
    Difformity = sum(True_Difform*author_contribution, na.rm = T)/ output,
            .by = c(department,COVID19)
            ) %>%
  pivot_wider(names_from = COVID19,
              values_from = c("Difformity","Diversity","output")) %>% View()
  
```

